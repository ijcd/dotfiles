#!/bin/bash
# http://stackoverflow.com/questions/3573410/what-is-the-shortest-way-to-swap-staged-and-unstaged-changes-in-git

# save staged
git commit -m "Saved staged"
git branch save-staged

# Make a commit with the unstaged changes (if the unstaged changes include new files you may need to explicitly git add them first):
git addremove
git commit -a -m "Unstaged changes"

# Rebase the unstaged changes onto the original HEAD (may involve conflict resolution):
git rebase --abort
git rebase -i HEAD^^^

# Finally, reset the index to the (originally) unstaged changes:
git reset HEAD^

# And move the branch pointer back to the original HEAD:
#git reset --soft HEAD^

# Removed temporary branch:
git branch -D save-staged
